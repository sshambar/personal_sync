#!/bin/sh

# finish-upgrade v1.8

# Installs all extra packages, and fixes up things like admin_user dir

[ $(id -u) -ne 0 ] && echo "Run as root!" && exit 1

[ "$1" = "-d" ] && shift && debug=echo

full=
[ "$1" = full ] && shift && full=1

set -e

echo
echo "Finishing upgrade...${debug:+DEBUG}"
echo

_pkgs_update() { # update if opkg lists missing or old
  if [ -z "$(find 2>/dev/null /var/opkg-lists/openwrt_base -mtime -1)" ]; then
    $debug opkg update
    touch /var/opkg-lists/openwrt_base
  fi
}

is_installed() { # <name>
  opkg status "$1" | grep -q 'Status:.*installed'
}

_install_pkg() { # <name>
  is_installed "$1" && return
  _pkgs_update
  $debug opkg install "$1"
}

install_pkgs() { # <name>...
  while [[ $1 ]]; do
    _install_pkg "$1" || return
    shift
  done
}

_disable_pkg() { # <name>
  is_installed "$1" || return 0
  local init_file=$(opkg files "$1" | grep "^/etc/init.d/" | head -1)
  [ -z "$init_file" ] && echo "Package $1 has no init.d file" && return 1
  [ $("$init_file" status) == running ] && $debug "$init_file" stop
  local app=${init_file##*/}
  [ -h /etc/rc.d/S*$app ] || return 0
  echo disabling $app
  $debug "$init_file" disable
}

disable_pkgs() { # <name>...
  while [[ $1 ]]; do
    _disable_pkg "$1" || return
    shift
  done
}

disable_pkgs dnscrypt-proxy2 samba4-server wsdd2

# core stuff
install_pkgs diffutils bash

ADMIN_USER=
[ -r /etc/admin.user ] && ADMIN_USER=$(cat /etc/admin.user)

if [ -n "$ADMIN_USER" -a -d "/$ADMIN_USER" ]; then
  if [ -G "/$ADMIN_USER" ]; then
    echo "fixing /$ADMIN_USER"
    $debug chgrp -R "$ADMIN_USER" "/$ADMIN_USER"
  fi

  install_pkgs shadow-su
fi

if [ -s /etc/ssh/sshd_config ]; then
  # install sshd only if we use it
  install_pkgs openssh-server
fi

# check for homedns
if [ -f /etc/hotplug.d/iface/90-homedns ]; then
  install_pkgs bind-client bind-dig curl ca-bundle
fi

# older less pkgs fail, workaround error
if ! is_installed less; then
  $debug rm -f /usr/bin/less
  $debug opkg install --force-overwrite less || \
    { ln -s ../bin/busybox /usr/bin/less; exit 1; }
fi

# non-basic install
install_pkgs procps-ng-ps tcpdump-mini iperf3

# check for sqm
if [ -f /etc/config/sqm ]; then
  install_pkgs luci-app-sqm
fi

# check for mwan3
if [ -f /etc/config/mwan3 ]; then
  install_pkgs luci-app-mwan3
fi

# check for irqbalance
if [ -f /proc/interrupts ] && grep -q CPU1 /proc/interrupts; then
  install_pkgs irqbalance
fi

# check for watchcat
if [ -f /etc/config/watchcat ]; then
  install_pkgs luci-app-watchcat
fi

if [ -f /proc/mtd ] && grep -q kernel2 /proc/mtd; then
  install_pkgs luci-app-advanced-reboot
fi

if [ -f /usr/sbin/media-mount ]; then
  install_pkgs kmod-fs-ext4 e2fsprogs block-mount cryptsetup \
               kmod-crypto-sha256 kmod-crypto-xts kmod-crypto-hmac \
               kmod-crypto-ecb
fi

if [ -f /etc/screenrc ]; then
  install_pkgs screen
fi

if [ -f /etc/ssh/ssh_config ]; then
  install_pkgs openssh-client
fi

if [ -f /etc/profile.d/console.sh ]; then
  # could crawl /sys/bus/usb for idVendor=067b idProduct=2303, or just
  # use most likely driver
  install_pkgs kmod-usb-serial-pl2303
fi

# regular packages
if [ -n "$full" ]; then
  # catchall if not already installed
  install_pkgs openssh-client openssh-server shadow-su lsof screen \
               haveged htop dmesg luci-app-uhttpd luci-ssl luci-app-sqm
fi

echo
echo "Upgrade finished!"
