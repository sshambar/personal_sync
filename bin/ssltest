#!/usr/bin/env bash
# -*- mode:sh; sh-indentation:2 -*- vim:set ft=sh et sw=2 ts=2:
#
# ssltest v0.2 SSL Cipher Test using OpenSSL
#
# Author: Scott Shambarger <devel@shambarger.net>
# Copyright (C) 2019-2025 Scott Shambarger
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# default: openssl s_server -cipher "ALL:@SECLEVEL=0"

# OpenSSL requires the port number.
#CIPHERLIST='ALL:@STRENGTH:!PSK:!ECDSA:!DSS:!SRP'
CIPHERLIST='ALL:@STRENGTH:!PSK:!DSS:!SRP'
#CIPHERLIST='aNULL'
DEFDELAY=1

err() { echo >&2 "$*"; }
die() { err "$*"; exit 1; }

usage() {
  echo "usage: $0 [ -{012} ] [ -l | -i | -m ] [ <host:port> [ <s_client options> ] ]"
  echo "  default <host:port> is localhost:4433 (openssl s_client)"
  echo "     <host> defaults to port 443"
  echo "  -0 - use <=tlsv1.0"
  echo "  -1 - use <=tlsv1.1"
  echo "  -2 - use <=tlsv1.2"
  echo "  -m - starttls smtp (port 25)"
  echo "  -i - starttls imap (port 143)"
  echo "  -p - look for preferred only"
  echo "  -l - list cipherlist tested"
  echo "  -s - sleep $DEFDELAY between connections"
  exit 0
}

command >/dev/null -v openssl || die "Unable to find openssl executable"
[[ $(openssl version) =~ OpenSSL ]] || die "Script only works with OpenSSL"

LVLOPT=
list=
pref_only=
while getopts ":012ilmps" arg; do
  case $arg in
    0)
      [[ $LVLOPT ]] && usage
      echo "Using <= TLSv1"
      LVLOPT="-tls1"
      ;;
    1)
      [[ $LVLOPT ]] && usage
      echo "Using <= TLSv1.1"
      LVLOPT="-tls1_1"
      ;;
    2)
      [[ $LVLOPT ]] && usage
      echo "Using <= TLSv1.2"
      LVLOPT="-tls1_2"
      ;;
    i)
      STARTTLS="-starttls imap";;
    l)
      list=1;;
    m)
      STARTTLS="-starttls smtp";;
    p)
      pref_only=1;;
    s)
      DELAY=$DEFDELAY;;
    *)
      usage;;
  esac
done
shift $((OPTIND-1))

process_dest() { # [ [<hostname>][:<port>] ]
  local port host dest
  if [[ $1 ]]; then
    dest=$1
    host=${dest%:*}
    [[ $dest =~ : ]] && port=${dest#*:}
  fi

  # setup defaults
  [[ $port ]] || {
    port=4433
    [[ $host ]] && port=443
    [[ $STARTTLS == "-starttls smtp" ]] && port=25
    [[ $STARTTLS == "-starttls imap" ]] && port=143
  }
  [[ $host ]] || host=localhost
  ARGS=("-connect" "${host}:$port")
  [[ $port == 25 || $port == 587 ]] && ARGS+=("-starttls" "smtp")
}

load_ciphers() {
  ciphers=()
  ciphers13=()

  [[ $pref_only ]] && return
  # get cipher list from $(openssl version).
  local opts=()
  if [[ $LVLOPT ]]; then
    opts=("$LVLOPT")
  elif openssl ciphers -tls1_3 >/dev/null 2>&1; then
    # tls1.3 supported, get ciphersuites list
    readarray -t -d : ciphers13 < <(openssl ciphers -tls1_3 -s "${CIPHERLIST}")
    opts=("-tls1_2")
  fi
  # now get <=1.2 ciphers
  readarray -t -d : ciphers < <(openssl ciphers "${opts[@]}" \
                                        -s "${CIPHERLIST}:@SECLEVEL=0")
}

test_cipher() { # <cipher> [ <openssl-opts> ]
  local show_cipher result args=() cipher=${1%$'\n'}
  shift
  [[ $list ]] && echo "$cipher" && return
  if [[ -z $cipher ]]; then
    show_cipher=1
    args+=("-cipher" "$CIPHERLIST:@SECLEVEL=0")
  elif [[ $tls13 ]]; then
    args+=("-ciphersuites" "$cipher")
  else
    args+=("-cipher" "$cipher:@SECLEVEL=0")
  fi
  [[ $LVLOPT ]] && args+=("$LVLOPT")

  [[ $1 ]] && {
    echo openssl s_client "${args[@]}" "${ARGS[@]}" "$@"
    echo "${STARTTLS:+quit}" |
      openssl s_client "${args[@]}" "${ARGS[@]}" "$@" 2>&1
    [[ $DELAY ]] && sleep "$DELAY"
    return
  }

  printf "%-32s" "$cipher "
  #echo -e "\nopenssl s_client "${args[@]}" "${ARGS[@]}""
  result=$(echo "${STARTTLS:+quit}" |
             openssl s_client "${args[@]}" "${ARGS[@]}" 2>&1)
  if [[ $result =~ ":error:" ]] ; then
    printf "%-10s" "Failed"
    echo "($(echo -n "$result" | grep ":error:" | cut -d':' -f6))"
  elif [[ $result =~ "Cipher is " ]] ; then
    if [[ $show_cipher ]]; then
      echo -n "$result" | grep "Cipher is " | sed 's/.*Cipher is //'
    else
      echo "Accepted"
    fi
  else
    printf >&2 "%-10s\n" "UNKNOWN OUTPUT:"
    err "$result"
    die "Possibly new openssl output format?"
  fi
  [[ $DELAY ]] && sleep "$DELAY"
}

process_dest "$1"
shift
# rest of args are for openssl...

load_ciphers

tls13=1
for cipher in "${ciphers13[@]}"; do
  test_cipher "$cipher" "$@"
done
tls13=

# <=tls1.2
OLVLOPT=$LVLOPT
[[ $LVLOPT ]] || LVLOPT=-tls1_2
for cipher in "${ciphers[@]}"; do
  test_cipher "$cipher" "$@"
done
LVLOPT=$OLVLOPT

[[ $list ]] && exit
echo -n "Preferred: "
test_cipher "" "$@"

# Local Variables:
# mode: sh
# sh-basic-offset: 2
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
