#!/bin/bash

# $PAGER and $DIFF_PAGER for use in emacs shell environment
#
# requires emacs server (see .profile.d/emacs.sh for required environment)
#
# handles files on stdin, or multiple files args...

TMPDIR=${TMPDIR%/}
TMPDIR=${TMPDIR:-/tmp}

TMPFILE=
cleanup() {
  [ -n "$TMPFILE" ] && rm -f "$TMPFILE"
}
trap cleanup 0

# create symlinks to this file with alt names to flag files of particular type
case $0 in
  *-diff) SUFFIX=.diff;;
  *) SUFFIX=;;
esac

TARGET=
FILECNT=0
for OPT; do
  case $OPT in
    -*) ;;
    *) TARGET=$OPT; ((FILECNT++));;
  esac
done

if [[ $SUFFIX ]]; then

  # diff uses tmpfile
  TARGET=

elif (($FILECNT > 1)); then

  # fallback to multi-file blocking...
  for OPT; do
    case $OPT in
      -*) ;;
      *) [ ! -r "$OPT" ] && echo "can't read '$OPT'" && continue
         $EDITOR -q "$OPT";;
    esac
  done
  exit 0

fi

# no target, use tmpfile
[[ $TARGET ]] || TMPFILE=$(mktemp -q $TMPDIR/emacs-tmp-XXXXXX)

if [ -n "$TMPFILE" -a -w "$TMPFILE" ]; then
  if [[ $SUFFIX ]]; then
    # need .diff suffix so emacs will treat file as diff
    mv "$TMPFILE" "${TMPFILE}${SUFFIX}" &>/dev/null &&
      TMPFILE=${TMPFILE}${SUFFIX}
  fi
  if (($# > 0)); then
    diff "$@" >> "$TMPFILE"
    (($? > 1)) && exit 2
  else
    # remove any color codes, [char]^H sequences...
    if command -v perl &>/dev/null; then
      perl -pe 's/\x1b\[[0-9;]*m//g;s/\x1b]4[^\\]*\\//g;s/.\x8//g' >> "$TMPFILE"
    else
      # doesn't work if sed doesn't support "enhanced" basic expressions
      sed -e 's/\x1b\[[0-9;]*m//g' -e 's/\x1b]4[^\\]*\\//g' -e 's/.\x08//g' >> "$TMPFILE"
    fi

  fi
  TARGET=$TMPFILE
fi

# need rows to figure if we just cat the file...
if [ -n "$MYEC_TTY" -a -z "$ROWS" ]; then
  stty --version &>/dev/null && FLAG=F || FLAG=f
  ROWS=$(stty -a -$FLAG "$MYEC_TTY" 2>/dev/null | sed -E -e '/rows/!d' -e 's/^.*rows ([0-9]{1,});.*$/\1/' -e 's/^.* ([0-9]{1,}) rows.*$/\1/')
fi
[ -z "$ROWS" ] && ROWS=40

LINES=$(head -$((ROWS + 10)) "$TARGET" | wc -l)

if (( LINES < ROWS )); then
  cat "$TARGET"
else
  $EDITOR -n "$TARGET"
fi
